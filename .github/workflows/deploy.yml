name: Deploy to Render

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_test:
    name: Run Tests Before Deploy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: reflexagent_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3.2
        bundler-cache: true
    
    - name: Setup database
      env:
        RAILS_ENV: test
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/reflexagent_test
      run: |
        bundle exec rails db:prepare
    
    - name: Run all tests
      env:
        RAILS_ENV: test
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/reflexagent_test
        REDIS_URL: redis://localhost:6379/1
      run: bundle exec rspec

  deploy:
    name: Deploy to Render
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to Render
        uses: JorgeLNJunior/render-deploy@v1.4.3
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
          wait_deploy: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure GitHub Webhooks
        env:
          GH_TOKEN: ${{ secrets.GH_PAT_TOKEN }}
          WEBHOOK_URL: ${{ secrets.RENDER_WEBHOOK_URL }}
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
        run: |
          # Configure GitHub webhook to send events to your ReflexAgent deployment
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/hooks \
            -d '{
              "name": "web",
              "active": true,
              "events": ["push", "pull_request", "issues", "issue_comment", "pull_request_review"],
              "config": {
                "url": "'"$WEBHOOK_URL"'/api/v1/events?source=github",
                "content_type": "json",
                "secret": "'"$WEBHOOK_SECRET"'"
              }
            }' 