<div class="min-h-screen bg-gray-50">
  <main class="max-w-full mx-auto">
    <div class="px-4 py-6">
      <!-- Header Section with Filters -->
      <div class="mb-6">
        <div class="flex flex-col md:flex-row justify-between items-start md:items-center">
          <h1 class="text-2xl font-bold text-gray-900 mb-3 md:mb-0">
            Commit Metrics Dashboard
          </h1>
          
          <!-- Filters Section -->
          <div class="flex flex-wrap gap-3">
            <!-- Repository Filter -->
            <div class="w-full sm:w-auto">
              <%= form_with url: dashboards_commit_metrics_path, method: :get, class: "flex" do |f| %>
                <%= f.select :repository, 
                  options_for_select(@repositories, @repository),
                  { include_blank: "All Repositories" },
                  { 
                    class: "rounded-l border border-gray-300 bg-white px-3 py-2 text-sm text-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500",
                    onchange: "this.form.requestSubmit()"
                  } 
                %>
                <!-- Preserve time period when changing repository -->
                <%= f.hidden_field :days, value: @days %>
                <button type="submit" class="inline-flex items-center rounded-r border border-l-0 border-gray-300 bg-gray-50 px-3 py-2 text-sm text-gray-500 hover:text-gray-700">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 01-.659 1.591l-5.432 5.432a2.25 2.25 0 00-.659 1.591v2.927a2.25 2.25 0 01-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 00-.659-1.591L3.659 7.409A2.25 2.25 0 013 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0112 3z" />
                  </svg>
                </button>
              <% end %>
            </div>
            
            <!-- Time Period Filter -->
            <div class="w-full sm:w-auto flex flex-wrap bg-white border border-gray-300 rounded">
              <%= link_to dashboards_commit_metrics_path(days: 7, repository: @repository), class: "px-3 py-2 text-sm #{@days == 7 ? 'bg-indigo-100 text-indigo-700 font-medium' : 'text-gray-500 hover:text-gray-700'}" do %>
                7 days
              <% end %>
              <%= link_to dashboards_commit_metrics_path(days: 30, repository: @repository), class: "px-3 py-2 text-sm #{@days == 30 ? 'bg-indigo-100 text-indigo-700 font-medium' : 'text-gray-500 hover:text-gray-700'}" do %>
                30 days
              <% end %>
            </div>
          </div>
        </div>
        
        <!-- Repository Status -->
        <div class="mt-3">
          <span class="text-sm text-gray-500">
            <% if @commit_metrics[:repository] && @commit_metrics[:repository] != "unknown" %>
              Showing metrics for <span class="font-medium text-gray-700"><%= @commit_metrics[:repository] %></span> over the last <%= @days %> days
            <% else %>
              No repository data available for the selected period
            <% end %>
          </span>
        </div>
      </div>
      
      <!-- Summary Stats Cards -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6">
        <!-- Total Commits -->
        <div class="bg-white overflow-hidden shadow-sm rounded-lg">
          <div class="px-4 py-5 sm:p-6">
            <dt class="text-sm font-medium text-gray-500 truncate flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mr-2 text-indigo-600">
                <path stroke-linecap="round" stroke-linejoin="round" d="M14.25 9.75L16.5 12l-2.25 2.25m-4.5 0L7.5 12l2.25-2.25M6 20.25h12A2.25 2.25 0 0020.25 18V6A2.25 2.25 0 0018 3.75H6A2.25 2.25 0 003.75 6v12A2.25 2.25 0 006 20.25z" />
              </svg>
              Total Commits
            </dt>
            <dd class="mt-1 text-3xl font-semibold text-gray-900">
              <%= @commit_metrics[:commit_volume][:total_commits] %>
            </dd>
            <p class="mt-2 text-sm text-gray-500">
              <%= @commit_metrics[:commit_volume][:days_with_commits] %> active days (<%= (@commit_metrics[:commit_volume][:commit_frequency] * 100).round %>% of period)
            </p>
          </div>
        </div>
        
        <!-- Code Churn -->
        <div class="bg-white overflow-hidden shadow-sm rounded-lg">
          <div class="px-4 py-5 sm:p-6">
            <dt class="text-sm font-medium text-gray-500 truncate flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mr-2 text-indigo-600">
                <path stroke-linecap="round" stroke-linejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10" />
              </svg>
              Lines Changed
            </dt>
            <dd class="mt-1 text-3xl font-semibold text-gray-900">
              <%= @commit_metrics[:code_churn][:total_churn] %>
            </dd>
            <p class="mt-2 text-sm text-gray-500">
              <%= @commit_metrics[:code_churn][:additions] %> added / <%= @commit_metrics[:code_churn][:deletions] %> removed
            </p>
          </div>
        </div>
        
        <!-- Breaking Changes -->
        <div class="bg-white overflow-hidden shadow-sm rounded-lg">
          <div class="px-4 py-5 sm:p-6">
            <dt class="text-sm font-medium text-gray-500 truncate flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mr-2 text-indigo-600">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z" />
              </svg>
              Breaking Changes
            </dt>
            <dd class="mt-1 text-3xl font-semibold text-gray-900">
              <%= @commit_metrics[:breaking_changes][:total] %>
            </dd>
            <p class="mt-2 text-sm text-gray-500">
              <%= @commit_metrics[:breaking_changes][:by_author].size %> contributors
            </p>
          </div>
        </div>
        
        <!-- Avg Daily Commits -->
        <div class="bg-white overflow-hidden shadow-sm rounded-lg">
          <div class="px-4 py-5 sm:p-6">
            <dt class="text-sm font-medium text-gray-500 truncate flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mr-2 text-indigo-600">
                <path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5" />
              </svg>
              Avg Commits
            </dt>
            <dd class="mt-1 text-3xl font-semibold text-gray-900">
              <%= @commit_metrics[:commit_volume][:commits_per_day].round(1) %>
            </dd>
            <p class="mt-2 text-sm text-gray-500">
              per day
            </p>
          </div>
        </div>
      </div>
      
      <!-- Main Dashboard Content -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <!-- Commits by Type -->
        <div class="bg-white shadow-sm rounded-lg p-6">
          <h2 class="text-lg font-medium text-gray-900 mb-4">Commits by Type</h2>
          <div class="chart-container h-64">
            <% 
              # Prepare data for chart.js
              commit_types = @commit_metrics[:commit_types] || []
              total_commits = commit_types.sum { |t| t[:count] }
              
              # Extract labels and data
              labels = commit_types.map { |t| t[:type] || 'unknown' }
              values = commit_types.map { |t| t[:count] }
              percentages = commit_types.map { |t| t[:percentage] }
              
              # Generate chart data and options
              chart_data = {
                labels: labels,
                datasets: [{
                  label: 'Commits',
                  data: values,
                  backgroundColor: labels.map.with_index do |_, i|
                    colors = ['rgba(79, 70, 229, 0.7)', 'rgba(16, 185, 129, 0.7)', 'rgba(245, 158, 11, 0.7)', 
                              'rgba(239, 68, 68, 0.7)', 'rgba(147, 51, 234, 0.7)', 'rgba(14, 165, 233, 0.7)']
                    colors[i % colors.length]
                  end,
                  borderWidth: 1
                }]
              }
              
              chart_options = {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                  y: {
                    beginAtZero: true,
                    ticks: { precision: 0 }
                  }
                },
                plugins: {
                  legend: { display: false }
                }
              }
            %>
            <canvas id="commit-types-chart"></canvas>
          </div>
          
          <!-- Table of commit types -->
          <div class="mt-4 overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Count</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Percentage</th>
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-200">
                <% if commit_types.any? %>
                  <% commit_types.each do |type| %>
                    <tr>
                      <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900"><%= type[:type] || 'unknown' %></td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= type[:count] %></td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= type[:percentage] %>%</td>
                    </tr>
                  <% end %>
                <% else %>
                  <tr>
                    <td colspan="3" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">No data available</td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        </div>
        
        <!-- Directory Hotspots -->
        <div class="bg-white shadow-sm rounded-lg p-6">
          <h2 class="text-lg font-medium text-gray-900 mb-4">Directory Hotspots</h2>
          <div class="chart-container h-64">
            <% 
              # Prepare data for chart.js
              directory_hotspots = @commit_metrics[:directory_hotspots] || []
              
              # Extract labels and data
              dir_labels = directory_hotspots.map { |d| d[:directory] || 'unknown' }
              dir_values = directory_hotspots.map { |d| d[:count] }
              
              # Generate chart data and options
              dir_chart_data = {
                labels: dir_labels,
                datasets: [{
                  data: dir_values,
                  backgroundColor: [
                    'rgba(79, 70, 229, 0.7)',
                    'rgba(16, 185, 129, 0.7)',
                    'rgba(245, 158, 11, 0.7)',
                    'rgba(239, 68, 68, 0.7)',
                    'rgba(147, 51, 234, 0.7)',
                    'rgba(14, 165, 233, 0.7)',
                    'rgba(249, 115, 22, 0.7)',
                    'rgba(6, 182, 212, 0.7)',
                    'rgba(217, 70, 239, 0.7)',
                    'rgba(248, 113, 113, 0.7)'
                  ],
                  borderWidth: 1
                }]
              }
              
              dir_chart_options = {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                  legend: { 
                    position: 'right',
                    labels: {
                      boxWidth: 15,
                      font: { size: 11 }
                    }
                  }
                }
              }
            %>
            <canvas id="directory-chart"></canvas>
          </div>
          
          <!-- Table of directory hotspots -->
          <div class="mt-4 overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Directory</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Changes</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Percentage</th>
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-200">
                <% if directory_hotspots.any? %>
                  <% directory_hotspots.each do |dir| %>
                    <tr>
                      <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900"><%= dir[:directory] || 'unknown' %></td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= dir[:count] %></td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= dir[:percentage] %>%</td>
                    </tr>
                  <% end %>
                <% else %>
                  <tr>
                    <td colspan="3" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">No data available</td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        </div>
        
        <!-- Author Activity -->
        <div class="bg-white shadow-sm rounded-lg p-6">
          <h2 class="text-lg font-medium text-gray-900 mb-4">Author Activity</h2>
          <div class="chart-container h-64">
            <% 
              # Prepare data for chart.js
              author_activity = @commit_metrics[:author_activity] || []
              
              # Extract top 10 authors for readability
              top_authors = author_activity.take(10)
              
              # Extract labels and data
              author_labels = top_authors.map { |a| a[:author] || 'unknown' }
              commit_counts = top_authors.map { |a| a[:commit_count] }
              
              # Generate chart data and options
              author_chart_data = {
                labels: author_labels,
                datasets: [{
                  label: 'Commits',
                  data: commit_counts,
                  backgroundColor: 'rgba(79, 70, 229, 0.7)',
                  borderWidth: 1
                }]
              }
              
              author_chart_options = {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                  y: {
                    beginAtZero: true,
                    ticks: { precision: 0 }
                  }
                },
                plugins: {
                  legend: { display: false }
                },
                indexAxis: 'y'  # Horizontal bar chart
              }
            %>
            <canvas id="author-chart"></canvas>
          </div>
          
          <!-- Table of author activity -->
          <div class="mt-4 overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Author</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Commits</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Lines Added</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Lines Removed</th>
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-200">
                <% if author_activity.any? %>
                  <% author_activity.each do |author| %>
                    <tr>
                      <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900"><%= author[:author] || 'unknown' %></td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= author[:commit_count] %></td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= author[:lines_added] %></td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= author[:lines_deleted] %></td>
                    </tr>
                  <% end %>
                <% else %>
                  <tr>
                    <td colspan="4" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">No data available</td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        </div>
        
        <!-- File Extensions -->
        <div class="bg-white shadow-sm rounded-lg p-6">
          <h2 class="text-lg font-medium text-gray-900 mb-4">File Types</h2>
          <div class="chart-container h-64">
            <% 
              # Prepare data for chart.js
              file_extensions = @commit_metrics[:file_extension_hotspots] || []
              
              # Extract labels and data
              ext_labels = file_extensions.map { |e| e[:extension] || 'unknown' }
              ext_values = file_extensions.map { |e| e[:count] }
              
              # Generate chart data and options
              ext_chart_data = {
                labels: ext_labels,
                datasets: [{
                  data: ext_values,
                  backgroundColor: [
                    'rgba(79, 70, 229, 0.7)',
                    'rgba(16, 185, 129, 0.7)',
                    'rgba(245, 158, 11, 0.7)',
                    'rgba(239, 68, 68, 0.7)',
                    'rgba(147, 51, 234, 0.7)',
                    'rgba(14, 165, 233, 0.7)',
                    'rgba(249, 115, 22, 0.7)',
                    'rgba(6, 182, 212, 0.7)',
                    'rgba(217, 70, 239, 0.7)',
                    'rgba(248, 113, 113, 0.7)'
                  ],
                  borderWidth: 1
                }]
              }
              
              ext_chart_options = {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                  legend: { 
                    position: 'right',
                    labels: {
                      boxWidth: 15,
                      font: { size: 11 }
                    }
                  }
                }
              }
            %>
            <canvas id="filetype-chart"></canvas>
          </div>
          
          <!-- Table of file extensions -->
          <div class="mt-4 overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Extension</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Count</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Percentage</th>
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-200">
                <% if file_extensions.any? %>
                  <% file_extensions.each do |ext| %>
                    <tr>
                      <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900"><%= ext[:extension] || 'unknown' %></td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= ext[:count] %></td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= ext[:percentage] %>%</td>
                    </tr>
                  <% end %>
                <% else %>
                  <tr>
                    <td colspan="3" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">No data available</td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
      
      <!-- Back Link -->
      <div class="mt-8 text-center">
        <%= link_to engineering_dashboard_path(days: @days), class: "inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2" do %>
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mr-2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M9 15L3 9m0 0l6-6M3 9h12a6 6 0 010 12h-3" />
          </svg>
          Back to Engineering Dashboard
        <% end %>
      </div>
    </div>
  </main>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Add data-loading state to help with debugging
    console.log('Commit metrics dashboard loaded');
    document.body.setAttribute('data-dashboard-loaded', 'true');
    
    // Initialize charts
    console.log('Initializing all charts');
    
    // Check if Chart.js is available
    if (typeof Chart === 'undefined') {
      console.error('Chart.js is not available');
      document.querySelectorAll('.chart-container').forEach(container => {
        container.innerHTML = '<div class="text-red-500 p-4 text-center">Chart.js library not loaded</div>';
      });
      return;
    }
    
    try {
      // Initialize all charts
      initializeTypeChart();
      initializeDirectoryChart();
      initializeAuthorChart();
      initializeFileTypesChart();
    } catch (error) {
      console.error('Error initializing charts:', error);
    }
  });
  
  // Function to initialize the commit types chart
  function initializeTypeChart() {
    const ctx = document.querySelector('#commit-types-chart');
    if (!ctx) {
      console.error("Could not find commit-types-chart canvas element");
      return;
    }
    
    console.log("Creating commit types chart");
    
    try {
      <% 
        # Prepare data for chart.js
        commit_types = @commit_metrics[:commit_types] || []
        
        # Extract labels and data
        labels = commit_types.map { |t| t[:type] || 'unknown' }
        values = commit_types.map { |t| t[:count] }
      %>
      
      const chartData = {
        labels: <%= raw labels.to_json %>,
        datasets: [{
          label: 'Commits',
          data: <%= raw values.to_json %>,
          backgroundColor: [
            'rgba(79, 70, 229, 0.7)', 
            'rgba(16, 185, 129, 0.7)', 
            'rgba(245, 158, 11, 0.7)', 
            'rgba(239, 68, 68, 0.7)', 
            'rgba(147, 51, 234, 0.7)', 
            'rgba(14, 165, 233, 0.7)'
          ],
          borderWidth: 1
        }]
      };
      
      const chartOptions = {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          y: {
            beginAtZero: true,
            ticks: { precision: 0 }
          }
        },
        plugins: {
          legend: { display: false }
        }
      };
      
      new Chart(ctx, {
        type: 'bar',
        data: chartData,
        options: chartOptions
      });
      console.log("Commit types chart created successfully");
    } catch (error) {
      console.error("Error creating commit types chart:", error);
    }
  }
  
  // Function to initialize the directory hotspots chart
  function initializeDirectoryChart() {
    const ctx = document.querySelector('#directory-chart');
    if (!ctx) {
      console.error("Could not find directory-chart canvas element");
      return;
    }
    
    console.log("Creating directory hotspots chart");
    
    try {
      <% 
        # Prepare data for chart.js
        directory_hotspots = @commit_metrics[:directory_hotspots] || []
        
        # Extract labels and data
        dir_labels = directory_hotspots.map { |d| d[:directory] || 'unknown' }
        dir_values = directory_hotspots.map { |d| d[:count] }
      %>
      
      const chartData = {
        labels: <%= raw dir_labels.to_json %>,
        datasets: [{
          data: <%= raw dir_values.to_json %>,
          backgroundColor: [
            'rgba(79, 70, 229, 0.7)',
            'rgba(16, 185, 129, 0.7)',
            'rgba(245, 158, 11, 0.7)',
            'rgba(239, 68, 68, 0.7)',
            'rgba(147, 51, 234, 0.7)',
            'rgba(14, 165, 233, 0.7)',
            'rgba(249, 115, 22, 0.7)',
            'rgba(6, 182, 212, 0.7)',
            'rgba(217, 70, 239, 0.7)',
            'rgba(248, 113, 113, 0.7)'
          ],
          borderWidth: 1
        }]
      };
      
      const chartOptions = {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: { 
            position: 'right',
            labels: {
              boxWidth: 15,
              font: { size: 11 }
            }
          }
        }
      };
      
      new Chart(ctx, {
        type: 'pie',
        data: chartData,
        options: chartOptions
      });
      console.log("Directory hotspots chart created successfully");
    } catch (error) {
      console.error("Error creating directory hotspots chart:", error);
    }
  }
  
  // Function to initialize the author activity chart
  function initializeAuthorChart() {
    const ctx = document.querySelector('#author-chart');
    if (!ctx) {
      console.error("Could not find author-chart canvas element");
      return;
    }
    
    console.log("Creating author activity chart");
    
    try {
      <% 
        # Prepare data for chart.js
        author_activity = @commit_metrics[:author_activity] || []
        
        # Extract top 10 authors for readability
        top_authors = author_activity.take(10)
        
        # Extract labels and data
        author_labels = top_authors.map { |a| a[:author] || 'unknown' }
        commit_counts = top_authors.map { |a| a[:commit_count] }
      %>
      
      const chartData = {
        labels: <%= raw author_labels.to_json %>,
        datasets: [{
          label: 'Commits',
          data: <%= raw commit_counts.to_json %>,
          backgroundColor: 'rgba(79, 70, 229, 0.7)',
          borderWidth: 1
        }]
      };
      
      const chartOptions = {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          y: {
            beginAtZero: true,
            ticks: { precision: 0 }
          }
        },
        plugins: {
          legend: { display: false }
        },
        indexAxis: 'y'  // Horizontal bar chart
      };
      
      new Chart(ctx, {
        type: 'bar',
        data: chartData,
        options: chartOptions
      });
      console.log("Author activity chart created successfully");
    } catch (error) {
      console.error("Error creating author activity chart:", error);
    }
  }
  
  // Function to initialize the file types chart
  function initializeFileTypesChart() {
    const ctx = document.querySelector('#filetype-chart');
    if (!ctx) {
      console.error("Could not find filetype-chart canvas element");
      return;
    }
    
    console.log("Creating file types chart");
    
    try {
      <% 
        # Prepare data for chart.js
        file_extensions = @commit_metrics[:file_extension_hotspots] || []
        
        # Extract labels and data
        ext_labels = file_extensions.map { |e| e[:extension] || 'unknown' }
        ext_values = file_extensions.map { |e| e[:count] }
      %>
      
      const chartData = {
        labels: <%= raw ext_labels.to_json %>,
        datasets: [{
          data: <%= raw ext_values.to_json %>,
          backgroundColor: [
            'rgba(79, 70, 229, 0.7)',
            'rgba(16, 185, 129, 0.7)',
            'rgba(245, 158, 11, 0.7)',
            'rgba(239, 68, 68, 0.7)',
            'rgba(147, 51, 234, 0.7)',
            'rgba(14, 165, 233, 0.7)',
            'rgba(249, 115, 22, 0.7)',
            'rgba(6, 182, 212, 0.7)',
            'rgba(217, 70, 239, 0.7)',
            'rgba(248, 113, 113, 0.7)'
          ],
          borderWidth: 1
        }]
      };
      
      const chartOptions = {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: { 
            position: 'right',
            labels: {
              boxWidth: 15,
              font: { size: 11 }
            }
          }
        }
      };
      
      new Chart(ctx, {
        type: 'doughnut',
        data: chartData,
        options: chartOptions
      });
      console.log("File types chart created successfully");
    } catch (error) {
      console.error("Error creating file types chart:", error);
    }
  }
</script> 